package assignment5;

import java.util.ArrayList;
import java.util.Scanner;

import assignment2.DanielPersonType;
import assignment2.DanielStackOverFlowException;

import java.io.File;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.FileNotFoundException;

public class VegaCampusDirectoryApp {
  public static void main(String[] args) {
    CS420TeamListADT teamList = new CS420TeamListADT();
    try {
      teamList.push(new DanielPersonType("Daniel", "Vega"));
      teamList.push(new DanielPersonType("Mario", "Vega"));
      teamList.push(new DanielPersonType("Tony", "Stark"));
      teamList.push(new DanielPersonType("Peter", "Parker"));
      teamList.push(new DanielPersonType("Steve", "Rogers"));
    } catch(DanielStackOverFlowException e) {
      e.printStackTrace();
    }
  }
  
  public static void handleInput(int input, BoundedStackInterface teamList, Scanner scanner) throws DanielStackUnderFlowException {
    switch(input) {
      case 0:
        System.out.println("Goodbye!"); 
      break;
      case 1:
        addPersonFromInput(teamList, scanner);
      break;
      case 2: 
        System.out.println("\n\n" + teamList.toString());
      break;
      case 3: 
        teamList.pop();
      break;
      case 4:
        searchByKeyword(teamList, scanner);
      break;
      case 5:
        teamList.sort();
      break;
      case 6:
        writeToFile(teamList);
      break;
      default:
        System.out.println("Please enter a valid option");
      break;
    }
  }
  
  public static void addPersonFromInput(BoundedStackInterface teamList, Scanner scanner) {
    scanner.nextLine();
    String fName;
    String lName;
    System.out.print("Enter person's first name\n> ");
    fName = scanner.next();
    System.out.print("Enter person's last name\n> ");
    lName = scanner.next();
    try {
      teamList.push(new DanielPersonType(fName.trim(), lName.trim()));
      System.out.print("\nPerson Added!");
    } catch (DanielStackOverFlowException e) {
      System.out.println(e);
    }
  }
  
  public static void writeToFile(BoundedStackInterface teamList) {
    try {  
      BufferedWriter writer = new BufferedWriter(new FileWriter("output.txt"));
      writer.write("The following are the names in the team:\n\n");
      writer.write(teamList.toString());
      writer.close();
      System.out.println("\n-------The team has been written to 'output.txt'");
    } catch(IOException e) {
      e.printStackTrace();
    }
  }
  
  public static void searchByKeyword(BoundedStackInterface teamList, Scanner scanner) {
    scanner.nextLine();
    System.out.print("Enter keyword to search by\n> ");
    String key = scanner.nextLine();
    System.out.print("\n\n");
    int numberFound=0;
    try {
      ArrayList<DanielPersonType> team = teamList.getTeam();
    
      DanielPersonType aDan;
      for(int i=0; i < team.size(); i++) {
        aDan = (DanielPersonType)team.get(i);
        if(aDan.getFirstName().toLowerCase().contains(key.toLowerCase())
        || aDan.getLastName().toLowerCase().contains(key.toLowerCase())) {
          System.out.println(aDan.toString());
          numberFound++;
        }
      }
      if(numberFound == 0)
        System.out.println("No person found!");
    } catch (DanielStackOverFlowException e) {
      System.out.println(e);
    }
  }
}
